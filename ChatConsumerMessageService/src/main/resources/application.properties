spring.application.name=kafka-con
server.port=${PORT:0}
eureka.client.serviceUrl.defaultZone=http://test:test@${HOSTNAME:localhost}:8010/eureka
eureka.client.service-url.defaultZone=http://test:test@${HOSTNAME:localhost}:8010/eureka

spring.kafka.consumer.bootstrap-servers=${KAFKAIP:localhost}:9092,${KAFKAIP:localhost}:9094
#spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.group-id=product-created-events
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
demo.service.url200=http://${HOSTNAME:localhost}:8089/response/200
demo.service.url500=http://${HOSTNAME:localhost}:8089/response/500
eureka.instance.prefer-ip-address=true
consumer.create.topic=genchat-created-events-topic
consumer.read.topic=genchat-read-events-topic
consumer.group-id=genchat-created-events
consumer.read.group-id=genchat-read-events

spring.kafka.consumer.properties.spring.json.trusted.packages=com.libmodel.modelReq
spring.devtools.remote.restart.enabled=false
spring.kafka.consumer.isolation-level=READ_COMMITTED
logging.file.name=kafka-consumer.log
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driver-class-name=org.h2.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled=true
eureka.instance.hostname=${DHOSTNAME:localhost}
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/chatgenai
spring.datasource.username=genai
spring.datasource.password=genai
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5