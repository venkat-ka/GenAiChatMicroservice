server.port=${PORT:0}
spring.application.name=kafka-prod
eureka.client.serviceUrl.defaultZone=http://test:test@${HOSTNAME:localhost}:8010/eureka
eureka.client.service-url.defaultZone=http://test:test@${HOSTNAME:localhost}:8010/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
gateway.ip=${MYIP:192.168.29.249}
logging.file.name=kafka-prod.log
#spring.kafka.listener.immediate-stop=true
spring.kafka.bootstrap-servers=${KAFKAIP:0.0.0.00}:9092,${KAFKAIP:0.0.0.00}:9094
spring.kafka.consumer.properties.spring.json.trusted.packages=com.libmodel.modelReq
#localhost:9092,localhost:9094 host.docker.internal/192.168.1.103
#spring.kafka.producer.bootstrap-servers=host.docker.internal:9092,host.docker.internal:9094
spring.kafka.producer.bootstrap-servers=${KAFKAIP:0.0.0.00}:9092,${KAFKAIP:0.0.0.00}:9094
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.isolation-level=READ_COMMITTED
#spring.kafka.producer.retries=3
spring.kafka.producer.properties.linger.ms=12000
spring.kafka.producer.properties.request.timeout.ms=3000
spring.kafka.producer.properties.enalbe.idempotence=true
spring.kafka.producer.properties.max.in.flight.request.per.connection=5

eureka.instance.prefer-ip-address=true
#logging.level.org.springframework.context=DEBUG
#server.tomcat.connection-timeout=3ms
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/chatgenai
spring.datasource.username=genai
spring.datasource.password=genai
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

consumer.create.topic=genchat-created-events-topic
consumer.read.topic=genchat-read-events-topic
consumer.group-id=genchat-created-events
consumer.read.group-id=genchat-read-events
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5