
server.port=8082
spring.application.name=api-gateway
eureka.client.serviceUrl.defaultZone=http://test:test@${RHOSTNAME:localhost}:8010/eureka
eureka.client.service-url.defaultZone=http://test:test@${RHOSTNAME:localhost}:8010/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#eureka.client.registerWithEureka=false
#eureka.client.register-with-eureka=false
#eureka.client.fetchRegistry=true
#eureka.client.registerWithEureka= true
#spring.cloud.config.import-check.enabled=false
#eureka.client.fetchRegistry= false
spring.cloud.gateway.globalcors.cors-configurations.[/users-ws/users/**].allowed-origins=http://${HOSTNAME:localhost}:3000
spring.cloud.gateway.globalcors.cors-configurations.[/users-ws/users/**].allowed-methods=*
spring.cloud.gateway.globalcors.cors-configurations.[/users-ws/users/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/users-ws/users/**].allow-credentials=false

spring.cloud.gateway.globalcors.cors-configurations.[/kafka-prod/chat/**].allowed-origins=http://${HOSTNAME:localhost}:3000
spring.cloud.gateway.globalcors.cors-configurations.[/kafka-prod/chat/**].allowed-methods=*
spring.cloud.gateway.globalcors.cors-configurations.[/kafka-prod/chat/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/kafka-prod/chat/**].allow-credentials=true

spring.cloud.gateway.globalcors.cors-configurations.[/kafka-prod/chat/api/send/].allowed-origins=http://${HOSTNAME:localhost}:3000

#spring.cloud.gateway.globalcors.cors-configurations.[/kafka-prod/chat/**].allowed-origins=http://localhost:3000
#spring.cloud.gateway.globalcors.cors-configurations.[/kafka-prod/chat/ws-chat/**].allowed-methods=*
#spring.cloud.gateway.globalcors.cors-configurations.[/kafka-prod/chat/ws-chat/**].allowed-headers=*
#spring.cloud.gateway.globalcors.cors-configurations.[/kafka-prod/chat/ws-chat/**].allowed-origin-patterns=*

#spring.cloud.gateway.globalcors.cors-configurations.[/kafka-prod/chat/ws-chat/**].allow-credentials=true




#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:3000

#spring.cloud.gateway.globalcors.cors-configurations.'[**]'.allowed-methods=GET,POST
#spring.cloud.gateway.globalcors.cors-configurations."[/**]".


spring.cloud.gateway.routes[0].id=users-status-check
spring.cloud.gateway.routes[0].uri=lb://users-ws
spring.cloud.gateway.routes[0].predicates[0]=Path=/users-ws/users/status/check
spring.cloud.gateway.routes[0].predicates[1]=Method=GET
spring.cloud.gateway.routes[0].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[0].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[0].filters[2]=AuthorizationHeaderFilter
spring.cloud.gateway.routes[0].filters[3]=AddRequestHeadersIfNotPresent=X-Request-User-ws:users-pass

spring.cloud.gateway.routes[1].id=users-ws
spring.cloud.gateway.routes[1].uri=lb://users-ws
spring.cloud.gateway.routes[1].predicates[0]=Path=/users-ws/users
spring.cloud.gateway.routes[1].predicates[1]=Method=POST
spring.cloud.gateway.routes[1].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[1].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[1].filters[2]=AddRequestHeadersIfNotPresent=X-Request-User-ws:users-pass

spring.cloud.gateway.routes[2].id=users-ws-login
spring.cloud.gateway.routes[2].uri=lb://users-ws
spring.cloud.gateway.routes[2].predicates[0]=Path=/users-ws/users/login
spring.cloud.gateway.routes[2].predicates[1]=Method=POST
spring.cloud.gateway.routes[2].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[2].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[2].filters[2]=AddRequestHeadersIfNotPresent=X-Request-User-ws:users-pass

spring.cloud.gateway.routes[3].id = users-ws-get-update-delete
spring.cloud.gateway.routes[3].uri = lb://users-ws
spring.cloud.gateway.routes[3].predicates[0]=Path=/users-ws/users/**
spring.cloud.gateway.routes[3].predicates[1]=Method=GET,PUT
spring.cloud.gateway.routes[3].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[3].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[3].filters[1]=AuthorizationHeaderFilter=ROLE_ADMIN
spring.cloud.gateway.routes[3].filters[2]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[3].filters[3]=AddRequestHeadersIfNotPresent=X-Request-User-ws:users-pass



spring.cloud.gateway.routes[4].id = users-ws-h2-console
spring.cloud.gateway.routes[4].uri = lb://users-ws
spring.cloud.gateway.routes[4].predicates[0]=Path=/users-ws/h2-console
spring.cloud.gateway.routes[4].predicates[1]=Method=GET
spring.cloud.gateway.routes[4].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[4].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[4].filters[2]=AddRequestHeadersIfNotPresent=X-Request-User-ws:users-pass

spring.cloud.gateway.routes[5].id=users-ws-actuator
spring.cloud.gateway.routes[5].uri= lb://users-ws
spring.cloud.gateway.routes[5].predicates[0]=Path=/users-ws/actuator/**
spring.cloud.gateway.routes[5].predicates[1]=Method=GET
spring.cloud.gateway.routes[5].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[5].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[5].filters[2]=AddRequestHeadersIfNotPresent=X-Request-User-ws:users-pass


spring.cloud.gateway.routes[6].id=role-ws
spring.cloud.gateway.routes[6].uri= lb://role-ws
spring.cloud.gateway.routes[6].predicates[0]=Path=/role-ws/apis/**
spring.cloud.gateway.routes[6].predicates[1]=Method=GET
spring.cloud.gateway.routes[6].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[6].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[6].filters[1]=RewritePath=/role-ws/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[6].filters[2]=AuthorizationHeaderFilter

spring.cloud.gateway.routes[7].id=role-ws-actuator
spring.cloud.gateway.routes[7].uri= lb://role-ws
spring.cloud.gateway.routes[7].predicates[0]=Path=/role-ws/actuator/**
spring.cloud.gateway.routes[7].predicates[1]=Method=GET
spring.cloud.gateway.routes[7].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[7].filters[1]=RewritePath=/role-ws/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[9].id=kafka-prod-get
spring.cloud.gateway.routes[9].uri= lb://kafka-prod
spring.cloud.gateway.routes[9].predicates[0]=Path=/kafka-prod/chat/getcheck
spring.cloud.gateway.routes[9].predicates[1]=Method=POST
spring.cloud.gateway.routes[9].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[9].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[9].filters[1]=RewritePath=/kafka-prod/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[9].filters[2]=AuthorizationHeaderFilter

spring.cloud.gateway.routes[8].id=kafka-prod-post
spring.cloud.gateway.routes[8].uri= lb://kafka-prod
spring.cloud.gateway.routes[8].predicates[0]=Path=/kafka-prod/chat/sendmessage
spring.cloud.gateway.routes[8].predicates[1]=Method=POST
#spring.cloud.gateway.routes[8].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[8].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[8].filters[1]=RewritePath=/kafka-prod/(?<segment>.*), /$\{segment}
#spring.cloud.gateway.routes[8].filters[2]=AuthorizationHeaderFilter


spring.cloud.gateway.routes[13].id=kafka-ws-chat-post
spring.cloud.gateway.routes[13].uri= lb://kafka-prod
spring.cloud.gateway.routes[13].predicates[0]=Path=/kafka-prod/ws-chat/api/send
spring.cloud.gateway.routes[13].predicates[1]=Method=POST
#spring.cloud.gateway.routes[8].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[13].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[13].filters[1]=RewritePath=/kafka-prod/(?<segment>.*), /$\{segment}
#spring.cloud.gateway.routes[8].filters[2]=AuthorizationHeaderFilter


spring.cloud.gateway.routes[10].id = users-ws-adduser
spring.cloud.gateway.routes[10].uri = lb://users-ws
spring.cloud.gateway.routes[10].predicates[0]=Path=/users-ws/users/**
spring.cloud.gateway.routes[10].predicates[1]=Method=POST
spring.cloud.gateway.routes[10].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[10].filters[2]=AddRequestHeadersIfNotPresent=X-Request-User-ws:users-pass
spring.cloud.gateway.routes[10].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[11].id=kafka-prod-post-read
spring.cloud.gateway.routes[11].uri= lb://kafka-prod
spring.cloud.gateway.routes[11].predicates[0]=Path=/kafka-prod/chat/readmessage
spring.cloud.gateway.routes[11].predicates[1]=Method=POST
spring.cloud.gateway.routes[11].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[11].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[11].filters[1]=RewritePath=/kafka-prod/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[11].filters[2]=AuthorizationHeaderFilter


spring.cloud.gateway.routes[12].id=kafka-websocket-post-read
spring.cloud.gateway.routes[12].uri= lb://kafka-prod
#spring.cloud.gateway.routes[12].metadata=http://localhost:3000
spring.cloud.gateway.routes[12].predicates[0]=Path=/kafka-prod/**
spring.cloud.gateway.routes[12].predicates[1]=Method=GET,POST

#spring.cloud.gateway.routes[12].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[12].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[12].filters[1]=RewritePath=/kafka-prod/(?<segment>.*), /$\{segment}



spring.cloud.gateway.routes[14].id=kafka-consumer-post-read
spring.cloud.gateway.routes[14].uri= lb://kafka-con
#spring.cloud.gateway.routes[12].metadata=http://localhost:3000
spring.cloud.gateway.routes[14].predicates[0]=Path=/kafka-con/**
spring.cloud.gateway.routes[14].predicates[1]=Method=GET,POST

#spring.cloud.gateway.routes[12].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[14].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[14].filters[1]=RewritePath=/kafka-con/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[15].id = users-ws-ws-chat
spring.cloud.gateway.routes[15].uri = lb://users-ws
spring.cloud.gateway.routes[15].predicates[0]=Path=/users-ws/ws-chat/**
spring.cloud.gateway.routes[15].predicates[1]=Method=GET,POST
spring.cloud.gateway.routes[15].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[15].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[15].filters[2]=AddRequestHeadersIfNotPresent=X-Request-User-ws:users-pass



#spring.cloud.gateway.routes[12].filters[2]=AuthorizationHeaderFilter
spring.cloud.gateway.httpclient.pool.max-idle-time=10ms
#management.endpoints.web.exposure.include=prometheus
management.endpoints.web.exposure.include=*
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.endpoint.prometheus.enabled=true
management.endpoint.metrics.enabled=true
#spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
logging.file.name=api-gateway.log
token.secret=hfgry463hf746hf573ydh475fhy5739hfgry463hf746hf573ydh475fhy5739hfgry463hf746hf573ydh475fhy5739
